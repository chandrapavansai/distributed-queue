services:
  postgres1:
    image: postgres:12
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ds-assgn-1
    volumes:
      - ./db-data-bkr1/:/var/lib/postgresql/data/
    #      - ./broker/database.sql:/docker-entrypoint-initdb.d/init.sql
    expose:
      - 5432
    ports:
      - 5433:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d ds-assgn-1" ]
      interval: 15s
      timeout: 30s
      retries: 5
      start_period: 5s
  
  postgres2:
    image: postgres:12
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ds-assgn-1
    volumes:
      - ./db-data-bkr2/:/var/lib/postgresql/data/
    #      - ./broker/database.sql:/docker-entrypoint-initdb.d/init.sql
    expose:
      - 5432
    ports:
      - 5434:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d ds-assgn-1" ]
      interval: 15s
      timeout: 30s
      retries: 5
      start_period: 5s


  broker1:
    build: ./broker
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    environment:
      - DB_HOST=postgres1
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - DB_NAME=ds-assgn-1
    ports:
      - 8080:80
      - 5678:5678
    volumes:
      - ./broker:/code
    depends_on:
      postgres1:
        condition: service_healthy
  
  broker2:
    build: ./broker
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    environment:
      - DB_HOST=postgres2
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - DB_NAME=ds-assgn-1
    ports:
      - 8081:80
      - 5679:5678
    volumes:
      - ./broker:/code
    depends_on:
      postgres2:
        condition: service_healthy

# Redis
  # redis:
  #   image: redis:alpine
  #   container_name: redis
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - ./redis-data:/data
  #   command: redis-server 
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  postgres-mgr:
    image: postgres:12
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ds-assgn-2-mgr
    volumes:
      - ./db-data-mgr/:/var/lib/postgresql/data/
    #      - ./broker/database.sql:/docker-entrypoint-initdb.d/init.sql
    expose:
      - 5432
    ports:
      - 5435:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d ds-assgn-2-mgr" ]
      interval: 15s
      timeout: 30s
      retries: 5
      start_period: 5s


  # Broker Manager Leader
  leader-mgr:
    build: ./broker-manager
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    environment:
      - DB_HOST=postgres-mgr
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - DB_NAME=ds-assgn-2-mgr
      - MGR_IP=leader-mgr
      - MGR_LEADER=leader-mgr
    ports:
      - 8090:80
      - 5688:5678
    volumes:
      - ./broker-manager:/code
    depends_on:
      postgres-mgr:
        condition: service_healthy

  # Broker Manager Follower
  follower-mgr:
    build: ./broker-manager
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    environment:
      - DB_HOST=postgres-mgr
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - DB_NAME=ds-assgn-2-mgr
      - MGR_IP=follower-mgr
      - MGR_LEADER=leader-mgr
    ports:
      - 8091:80
      - 5689:5678
    volumes:
      - ./broker-manager:/code
    depends_on:
      postgres-mgr:
        condition: service_healthy
