# Command to run
# docker compose --file docker-compose-raft-broker.yml up --build
services:
  database:
    image: postgres:12
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ds-assgn-2-mgr
#    configs:
#      - wal_level=logical
    volumes:
      - ./db-data-mgr-test/:/var/lib/postgresql/data/
    ports:
      - 5442:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d ds-assgn-2-mgr" ]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 5s
    networks:
      - raft-net


  manager-test:
    build: ./broker-manager
    command: python -m pytest tests/test_manager.py -v
    environment:
      - DB_HOST=distributed_queue-database-1
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - DB_NAME=ds-assgn-2-mgr
    volumes:
      - ./broker-manager:/code
    depends_on:
      database:
        condition: service_healthy
    networks:
      - raft-net

  raft-broker1:
    build: ./raft-broker
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - BROKER=raft-broker1
      - LEADER_URL=http://leader-mgr:8091
    ports:
      - 8000:8000
    volumes:
      - ./raft-broker:/code
    networks:
      - raft-net

  raft-broker2:
    build: ./raft-broker
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - BROKER=raft-broker2
      - LEADER_URL=http://leader-mgr:8091
    ports:
      - 8001:8000
    volumes:
      - ./raft-broker:/code
    networks:
      - raft-net
  
  raft-broker3:
    build: ./raft-broker
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - BROKER=raft-broker3
      - LEADER_URL=http://leader-mgr:8091
    ports:
      - 8002:8000
    volumes:
      - ./raft-broker:/code
    networks:
      - raft-net

networks:
  raft-net:
    driver: bridge